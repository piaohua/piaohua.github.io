<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ssl on piaohua&#39;s blog</title>
    <link>https://piaohua.github.io/tags/ssl/</link>
    <description>Recent content in ssl on piaohua&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 22 Oct 2022 11:41:52 +0800</lastBuildDate>
    
	<atom:link href="https://piaohua.github.io/tags/ssl/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[Go] Http 服务加载多个ssl证书</title>
      <link>https://piaohua.github.io/post/golang/20221022-http-with-multiple-certificates/</link>
      <pubDate>Sat, 22 Oct 2022 11:41:52 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/golang/20221022-http-with-multiple-certificates/</guid>
      <description>Http 服务加载多个ssl证书 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 cfg := &amp;amp;tls.Config{} cert, err := tls.LoadX509KeyPair(&amp;#34;cert_one.pem&amp;#34;, &amp;#34;key_one.pem&amp;#34;) if err != nil { log.Fatal(err) } cfg.Certificates = append(cfg.Certificates, cert) // keep adding remaining certs to cfg.Certificates server := http.Server{ Addr: &amp;#34;:443&amp;#34;, // Handler: myHandler, TLSConfig: cfg, } server.ListenAndServeTLS(&amp;#34;&amp;#34;, &amp;#34;&amp;#34;) http.ListenAndServeTLS with</description>
    </item>
    
    <item>
      <title>[godaddy SSL] godaddy SSL证书申请</title>
      <link>https://piaohua.github.io/post/tool/20221021-godaddy-ssl/</link>
      <pubDate>Fri, 21 Oct 2022 23:22:03 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/tool/20221021-godaddy-ssl/</guid>
      <description>godaddy SSL证书申请 生成CSRs (Certificate Signing Requests) 从服务器上生成证书签名请求(CSRs)： 1 openssl req -new -newkey rsa:2048 -nodes -keyout coolexample.key -out coolexample.csr 用自己的域名替换coolexample，执行</description>
    </item>
    
  </channel>
</rss>