<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>cache on piaohua&#39;s blog</title>
    <link>https://piaohua.github.io/tags/cache/</link>
    <description>Recent content in cache on piaohua&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 24 Mar 2024 18:02:35 +0800</lastBuildDate>
    
	<atom:link href="https://piaohua.github.io/tags/cache/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[Go] 防缓存击穿利器 singleflight</title>
      <link>https://piaohua.github.io/post/golang/20240324-singleflight/</link>
      <pubDate>Sun, 24 Mar 2024 18:02:35 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/golang/20240324-singleflight/</guid>
      <description>Package singleflight provides a duplicate function call suppression mechanism. 原文： Go singleflight：防缓存击穿利器 Documentation 什么是缓存击穿 缓存击穿 是指在高并发的情况下，某个热点的 key 突然过期，导致大</description>
    </item>
    
    <item>
      <title>什么是缓存雪崩、缓存击穿、缓存穿透</title>
      <link>https://piaohua.github.io/post/learn/20240324-cache/</link>
      <pubDate>Sun, 24 Mar 2024 17:46:13 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/learn/20240324-cache/</guid>
      <description>什么是缓存雪崩、缓存击穿、缓存穿透，各自有哪些解析方案？ Redis 缓存穿透、缓存击穿、缓存雪崩区别和解决方案 缓存穿透 缓存穿透说简单点就是大量请求的 key</description>
    </item>
    
  </channel>
</rss>