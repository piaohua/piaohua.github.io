<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>mysql on piaohua&#39;s blog</title>
    <link>https://piaohua.github.io/tags/mysql/</link>
    <description>Recent content in mysql on piaohua&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 26 Dec 2020 10:18:24 +0800</lastBuildDate>
    
	<atom:link href="https://piaohua.github.io/tags/mysql/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[MySQL] Mysql Character</title>
      <link>https://piaohua.github.io/post/mysql/20201126-mysql-character/</link>
      <pubDate>Sat, 26 Dec 2020 10:18:24 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/mysql/20201126-mysql-character/</guid>
      <description>Mysql 字符集(Character) 介绍 字符集介绍 MySQL支持多种字符集，不同字符集有区别；广泛使用是utf8和utf8mb4。 utf8是utf</description>
    </item>
    
    <item>
      <title>[MySQL] Mysql Binlog 操作命令</title>
      <link>https://piaohua.github.io/post/mysql/20201122-mysql-binlog/</link>
      <pubDate>Sun, 22 Nov 2020 23:17:08 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/mysql/20201122-mysql-binlog/</guid>
      <description>Mysql Binlog 日志 使用场景 MySQL主从复制，Master节点开启binlog日志记录，然后同步到slave节点 MySQL数据恢复，使用mysqlbi</description>
    </item>
    
    <item>
      <title>[MySQL] MySQL索引优化总结</title>
      <link>https://piaohua.github.io/post/mysql/20200913-mysql-index-optimize/</link>
      <pubDate>Sun, 13 Sep 2020 17:54:26 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/mysql/20200913-mysql-index-optimize/</guid>
      <description>MySQL索引优化总结 什么是索引 索引（在MySQL中也叫“键key”）是存储引擎快速找到记录的一种数据结构。 - 《高性能MySQL》 索引类型 可</description>
    </item>
    
    <item>
      <title>[MySQL] MySQL大表优化方案</title>
      <link>https://piaohua.github.io/post/mysql/20200913-mysql-large-table-scheme/</link>
      <pubDate>Sun, 13 Sep 2020 17:40:30 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/mysql/20200913-mysql-large-table-scheme/</guid>
      <description>MySQL大表优化方案 单表优化 字段 尽量使用TINYINT、SMALLINT、MEDIUM_INT作为整数类型而非INT，如果非负则加上UNS</description>
    </item>
    
    <item>
      <title>[MySQL] MySQL Connection Phase Packets</title>
      <link>https://piaohua.github.io/post/mysql/20200821-mysql-connection-phase-packets/</link>
      <pubDate>Fri, 21 Aug 2020 23:40:54 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/mysql/20200821-mysql-connection-phase-packets/</guid>
      <description>MySQL Connection Phase Packets Initial Handshake Packet 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 1 [0a] protocol version string[NUL] server version 4 connection id string[8] auth-plugin-data-part-1 1 [00] filler 2 capability flags (lower 2 bytes) if more data in the packet: 1 character set 2 status flags 2 capability flags (upper 2 bytes) if capabilities &amp;amp;</description>
    </item>
    
    <item>
      <title>[MySQL] MySQL Capability Flags</title>
      <link>https://piaohua.github.io/post/mysql/20200821-mysql-capability-flags/</link>
      <pubDate>Fri, 21 Aug 2020 00:07:17 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/mysql/20200821-mysql-capability-flags/</guid>
      <description>MySQL Capability Flags 简介 客户端和服务器使用权能标志来指示它们支持和想要使用的功能。 标志位名称 标志位 说明 CLIENT_LONG_PASSWORD 0x0001 new more secure passwords CLIENT_FOUND_ROWS 0x0002 Found instead of affected rows CLIENT_LONG_FLAG 0x0004 Get all column flags CLIENT_CONNECT_WITH_DB 0x0008 One can specify db on</description>
    </item>
    
    <item>
      <title>[MySQL] MySQL身份验证插件</title>
      <link>https://piaohua.github.io/post/mysql/20200818-mysql-plugin/</link>
      <pubDate>Tue, 18 Aug 2020 00:42:48 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/mysql/20200818-mysql-plugin/</guid>
      <description>MySQL身份验证插件(mysql_native_password、sha256_password、caching_sha2_passwor</description>
    </item>
    
    <item>
      <title>[MySQL] MySQL配置文件my.cnf参数解释说明</title>
      <link>https://piaohua.github.io/post/mysql/20200817-mysql-my-cnf/</link>
      <pubDate>Mon, 17 Aug 2020 23:32:11 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/mysql/20200817-mysql-my-cnf/</guid>
      <description>MySQL配置文件my.cnf参数解释说明 参数说明 #BEGIN CONFIG INFO #DESCR: 4GB RAM, 只使用InnoDB, ACID, 少量的连接, 队列负载大 #TYPE: SYSTEM #END CONFIG INFO # # 此mysql配置文件</description>
    </item>
    
    <item>
      <title>[MySQL] MySQL 内连接、外连接、左连接、右连接示例介绍</title>
      <link>https://piaohua.github.io/post/mysql/20200816-mysql-join/</link>
      <pubDate>Sun, 16 Aug 2020 12:57:55 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/mysql/20200816-mysql-join/</guid>
      <description>MySQL 内连接、左连接（左外连接）、右连接（右外连接） 创建示例表 1 2 3 4 5 6 7 8 9 10 11 CREATE TABLE `a_table` ( `a_id` int(11) DEFAULT NULL, `a_name` varchar(10) DEFAULT NULL, `a_part` varchar(10) DEFAULT NULL ) ENGINE=InnoDB DEFAULT CHARSET=utf8 CREATE TABLE `b_table` ( `b_id` int(11) DEFAULT NULL, `b_name` varchar(10)</description>
    </item>
    
    <item>
      <title>[MySQL] MySQL事务详情</title>
      <link>https://piaohua.github.io/post/mysql/20200816-mysql-transaction/</link>
      <pubDate>Sun, 16 Aug 2020 00:09:58 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/mysql/20200816-mysql-transaction/</guid>
      <description>数据库中的事务是指对数据库执行一批操作，这些操作最终要么全部执行成功，要么全部失败，不会存在部分成功的情况。 事务的特性(ACID) 原子性（A</description>
    </item>
    
    <item>
      <title>[MySQL] MySQL通过Sys库查看数据库运行情况</title>
      <link>https://piaohua.github.io/post/mysql/20200812-mysql-sys/</link>
      <pubDate>Wed, 12 Aug 2020 22:52:40 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/mysql/20200812-mysql-sys/</guid>
      <description>快捷的了解到MySQL的一些信息 sys库里面的表、视图、函数、存储过程可以使我们更方便、快捷的了解到MySQL的一些信息，比如哪些语句使用了</description>
    </item>
    
    <item>
      <title>[MySQL] MySQL autocommit</title>
      <link>https://piaohua.github.io/post/mysql/20200812-mysql-autocommit/</link>
      <pubDate>Wed, 12 Aug 2020 22:24:38 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/mysql/20200812-mysql-autocommit/</guid>
      <description>MySQL autocommit 控制是否开启隐式事务 查看状态 mysql&amp;gt; show variables like &#39;%autocommit%&#39;; 开启自动提交 mysql&amp;gt; set autocommit=1; 关闭自动提交 使用commit提交事务操作，或者使用rollback回滚操作 配置文</description>
    </item>
    
    <item>
      <title>[MySQL] MySQL 连接数和状态查看</title>
      <link>https://piaohua.github.io/post/mysql/20200809-mysql-show-connections/</link>
      <pubDate>Sun, 09 Aug 2020 00:09:40 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/mysql/20200809-mysql-show-connections/</guid>
      <description>MySQL 连接数和状态查看 mysql的最大连接数默认是100, 最大可以达到16384 查看mysql服务器最大连接数 1 2 mysql&amp;gt; show variables like &amp;#39;%max_connections%&amp;#39;; mysql&amp;gt; select @@max_connections; 设置mysql</description>
    </item>
    
    <item>
      <title>[MySQL] MySQL Sysbench</title>
      <link>https://piaohua.github.io/post/mysql/20200808-mysql-sysbench/</link>
      <pubDate>Sat, 08 Aug 2020 11:53:39 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/mysql/20200808-mysql-sysbench/</guid>
      <description>MySQL 基准测试 sysbench介绍 sysbench 是一个模块化的、跨平台、多线程基准测试工具，主要用于评估测试各种不同系统参数下的数据库负载情况。 它主要包括以</description>
    </item>
    
    <item>
      <title>[MySQL] MySQL Affected Rows</title>
      <link>https://piaohua.github.io/post/mysql/20200805-mysql-affected-rows/</link>
      <pubDate>Wed, 05 Aug 2020 21:27:39 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/mysql/20200805-mysql-affected-rows/</guid>
      <description>MySQL INSERT/INSERT &amp;hellip; ON DUPLICATE KEY UPDATE Affected Rows 问题 问题描述 在INSERT/INSERT ... ON DUPLICATE KEY UPDATE操作时, 会存在MySQL连接client_flag是否设置CL</description>
    </item>
    
  </channel>
</rss>