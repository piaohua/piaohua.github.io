<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>docker on piaohua&#39;s blog</title>
    <link>https://piaohua.github.io/tags/docker/</link>
    <description>Recent content in docker on piaohua&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 28 Oct 2023 14:00:28 +0800</lastBuildDate>
    
	<atom:link href="https://piaohua.github.io/tags/docker/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Mac使用Colima运行Docker</title>
      <link>https://piaohua.github.io/post/docker/20231028-mac-colima/</link>
      <pubDate>Sat, 28 Oct 2023 14:00:28 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/docker/20231028-mac-colima/</guid>
      <description>Mac使用Colima运行Docker Container runtimes on macOS (and Linux) with minimal setup Installation 1 2 # Homebrew brew install colima 安装Docker 1 brew install docker 启动 1 colima start Colima 会使用 QEMU 虚拟机； 启动时指定参数 create</description>
    </item>
    
    <item>
      <title>[ClickHouse] ClickHouse 安装部署</title>
      <link>https://piaohua.github.io/post/docker/20221231-clickhouse/</link>
      <pubDate>Sat, 31 Dec 2022 14:43:44 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/docker/20221231-clickhouse/</guid>
      <description>ClickHouse 安装部署 RPM安装包 推荐使用CentOS、RedHat和所有其他基于rpm的Linux发行版的官方预编译rpm包。 首先，您需要添加官方存储</description>
    </item>
    
    <item>
      <title>[Gerrit] Gerrit Code Reviewer in Docker</title>
      <link>https://piaohua.github.io/post/golang/20220701-gerrit-docker/</link>
      <pubDate>Fri, 01 Jul 2022 21:53:46 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/golang/20220701-gerrit-docker/</guid>
      <description>Gerrit是一个基于 Web 的代码审查系统，适于采用 Git 版本控制系统开发的项目进行在线代码审查。 快速启动 快速启动一个gerrit server，启动</description>
    </item>
    
    <item>
      <title>[Docker] Docker-compose 安装 Wordpress 博客</title>
      <link>https://piaohua.github.io/post/docker/20210829-docker-wordpress/</link>
      <pubDate>Sun, 29 Aug 2021 10:32:41 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/docker/20210829-docker-wordpress/</guid>
      <description>Docker-compose 安装 Wordpress 博客 安装 Wordpress 创建 docker-compose.wordpress.yml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 version:&amp;#39;3.3&amp;#39;services:db:image:mysql:5.7.22volumes:- db_data:/var/lib/mysqlrestart:alwaysenvironment:MYSQL_ROOT_PASSWORD:somewordpressMYSQL_DATABASE:wordpressMYSQL_USER:wordpressMYSQL_PASSWORD:wordpresswordpress:depends_on:- dbimage:wordpress:latestvolumes:- wordpress_data:/var/www/htmlports:- &amp;#34;8000:80&amp;#34;restart:alwaysenvironment:WORDPRESS_DB_HOST:db:3306WORDPRESS_DB_USER:wordpressWORDPRESS_DB_PASSWORD:wordpressWORDPRESS_DB_NAME:wordpressvolumes:db_data:{}wordpress_data:{} 启动 wordpress 1 &amp;gt; docker-compose -f docker-compose.wordpress.yml up -d 访问博客: localhost:8000 访问管理后台：l</description>
    </item>
    
    <item>
      <title>[Docker] 为什么`mysql -h localhost`无法登录了？</title>
      <link>https://piaohua.github.io/post/docker/20210823-docker-mysql-login/</link>
      <pubDate>Mon, 23 Aug 2021 22:35:22 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/docker/20210823-docker-mysql-login/</guid>
      <description>为什么mysql -h localhost无法登录了？ 在mac上用docker运行了一个mysql,配置如下： docker-compose.yml</description>
    </item>
    
    <item>
      <title>[Docker] Etcd Cluster</title>
      <link>https://piaohua.github.io/post/docker/20210822-docker-etcd-cluster/</link>
      <pubDate>Sun, 22 Aug 2021 15:33:44 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/docker/20210822-docker-etcd-cluster/</guid>
      <description>Docker 部署 Etcd 集群 拉取镜像 选择一个镜像拉取 1 2 3 4 5 6 7 docker pull gcr.io/etcd-development/etcd:v3.5.0 docker pull quay.io/coreos/etcd:v3.5.0 docker pull bitnami/etcd:latest docker pull k8s.gcr.io/etcd:3.4.13-0 运行容器 使用gcr.io/etcd-development/etc</description>
    </item>
    
    <item>
      <title>[MySQL] 用Docker搭建MySQL主从多节点集群</title>
      <link>https://piaohua.github.io/post/mysql/20210523-mysql-master-slaves/</link>
      <pubDate>Sun, 23 May 2021 18:56:22 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/mysql/20210523-mysql-master-slaves/</guid>
      <description>用Docker搭建MySQL主从多节点集群 MySQL 主从同步分为 5 个步骤： master 节点将数据的更新记录写到 binary log 中。 slave 节点开启 IO 线程连接 master 节点，请求获取指定</description>
    </item>
    
    <item>
      <title>[MySQL] MySQL Cluster on docker-compose</title>
      <link>https://piaohua.github.io/post/mysql/20210523-mysql-cluster/</link>
      <pubDate>Sun, 23 May 2021 12:07:32 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/mysql/20210523-mysql-cluster/</guid>
      <description>MySQL Cluster on docker-compose MySQL Cluster是一个高性能、可扩展、集群化数据库产品。MySQL Cluster是一个基于NDB Cluster存储引擎的完整分布式数</description>
    </item>
    
    <item>
      <title>[MySQL] Percona XtraDB Cluster on docker-compose</title>
      <link>https://piaohua.github.io/post/mysql/20210523-mysql-pxc/</link>
      <pubDate>Sun, 23 May 2021 11:40:17 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/mysql/20210523-mysql-pxc/</guid>
      <description>Percona XtraDB Cluster on docker-compose 选择percona/percona-xtradb-cluster:5.7版本，搭建一个3节点的集群; 使用haproxy做反向代理负</description>
    </item>
    
    <item>
      <title>[Go] Golang应用构建Docker镜像</title>
      <link>https://piaohua.github.io/post/docker/20200816-golang-docker/</link>
      <pubDate>Sun, 16 Aug 2020 23:15:15 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/docker/20200816-golang-docker/</guid>
      <description>Golang应用通过Dockerfile构建Docker镜像 构建镜像 构建一个go应用镜像，当前目录加载项目，编译生成二进制文件 1 2 3 4 5 6 7</description>
    </item>
    
  </channel>
</rss>