<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>openresty on piaohua&#39;s blog</title>
    <link>https://piaohua.github.io/tags/openresty/</link>
    <description>Recent content in openresty on piaohua&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 28 Aug 2025 22:38:12 +0800</lastBuildDate>
    
	<atom:link href="https://piaohua.github.io/tags/openresty/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Openresty &#43; Lua &#43; Redis 实现动态IP黑名单</title>
      <link>https://piaohua.github.io/post/tool/20250828-openresty-lua-redis-ip-black/</link>
      <pubDate>Thu, 28 Aug 2025 22:38:12 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/tool/20250828-openresty-lua-redis-ip-black/</guid>
      <description>Openresty + Lua + Redis 实现动态IP黑名单 在 Nginx 中屏蔽特定 IP 地址是提升服务器安全性的有效方式，可以防止恶意访问和攻击。 配置deny指令来屏蔽IP Nginx 主要通过 deny</description>
    </item>
    
    <item>
      <title>Openresty &#43; Websocket &#43; Redis Stream 实现一个简单聊天室，保持长连接，并通过Redis转发消息</title>
      <link>https://piaohua.github.io/post/tool/20250824-openresty-websocket-redis/</link>
      <pubDate>Sun, 24 Aug 2025 19:30:50 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/tool/20250824-openresty-websocket-redis/</guid>
      <description>用 Openresty + Websocket + Redis Stream 实现一个简单聊天室，保持长连接，并通过Redis Stream 转发消息 在 Openresty + Websocket + Redis 实现一个简单聊天室，保持长连接，并通过Redis转发消息</description>
    </item>
    
    <item>
      <title>Openresty &#43; Websocket &#43; Redis 实现一个简单聊天室，保持长连接，并通过Redis转发消息</title>
      <link>https://piaohua.github.io/post/tool/20250823-openresty-websocket-redis/</link>
      <pubDate>Sat, 23 Aug 2025 17:31:09 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/tool/20250823-openresty-websocket-redis/</guid>
      <description>用 Openresty + Websocket + Redis 实现一个简单聊天室，保持长连接，并通过Redis转发消息 在 Openresty 创建 Websocket 连接，并将消息发到 Redis 队列中 中，详细实现了一个简单的聊天室，将消</description>
    </item>
    
    <item>
      <title>Openresty 创建 Websocket 连接，并将消息发到 Redis 队列中</title>
      <link>https://piaohua.github.io/post/tool/20250816-openresty-websocket-redis/</link>
      <pubDate>Sat, 16 Aug 2025 16:22:40 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/tool/20250816-openresty-websocket-redis/</guid>
      <description>Openresty 实现 Websocket 连接，并将消息发到 Redis 队列中，方便其他服务消费。 docker 安装 openresty 在宿主机上创建挂载的目录 1 2 3 mkdir -p /data/openresty/nginx/ cd /data/openresty/nginx mkdir -p conf.d html logs lua conf 下载 openresty 镜像 1 docker pull openresty/openresty:1.25.3.2-alpine-aarch64 启动容</description>
    </item>
    
    <item>
      <title>Openresty 使用入门</title>
      <link>https://piaohua.github.io/post/tool/20250727-openresty-usages/</link>
      <pubDate>Sun, 27 Jul 2025 17:01:44 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/tool/20250727-openresty-usages/</guid>
      <description>使用Docker安装OpenResty并使用示例学习 OpenResty® 是一个基于 Nginx 与 Lua 的高性能 Web 平台，其内部集成了大量精良的 Lua 库、第三方模</description>
    </item>
    
  </channel>
</rss>