<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>mysql on piaohua&#39;s blog</title>
    <link>https://piaohua.github.io/categories/mysql/</link>
    <description>Recent content in mysql on piaohua&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 09 Sep 2024 23:57:49 +0800</lastBuildDate>
    
	<atom:link href="https://piaohua.github.io/categories/mysql/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>AWS RDS 创建MySQL数据库，并通过EC2服务器连接</title>
      <link>https://piaohua.github.io/post/mysql/20240909-aws-rds-init/</link>
      <pubDate>Mon, 09 Sep 2024 23:57:49 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/mysql/20240909-aws-rds-init/</guid>
      <description>AWS RDS 创建MySQL数据库，并通过Ec2服务器连接 创建数据库时，根据自己的需求，按RDS提示创建数据库即可，比如选择MySQL社区版本创建， 选</description>
    </item>
    
    <item>
      <title>MySQL 数据同步工具 dtle (Data-Transformation-le) 使用</title>
      <link>https://piaohua.github.io/post/mysql/20240602-data-transformation-le/</link>
      <pubDate>Sun, 02 Jun 2024 18:15:14 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/mysql/20240602-data-transformation-le/</guid>
      <description>dtle (Data-Transformation-le) 是上海爱可生信息技术股份有限公司 开发并开源的 CDC 工具. 特点 多种数据传输模式 支持链路压缩 支持同构传输和异构传输 支持跨网络边际的传输 多种数据处</description>
    </item>
    
    <item>
      <title>MySQL Binlog Event</title>
      <link>https://piaohua.github.io/post/mysql/20240602-binlog-event/</link>
      <pubDate>Sun, 02 Jun 2024 17:38:15 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/mysql/20240602-binlog-event/</guid>
      <description>常见binlog event解析 mysql binlog event 定义如下： https://github.com/go-mysql-org/go-mysql/blob/master/replication/const.go#L51 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46</description>
    </item>
    
    <item>
      <title>MySQL备份工具 percona/xtrabackup 原理及使用</title>
      <link>https://piaohua.github.io/post/mysql/20240602-xtrabackup/</link>
      <pubDate>Sun, 02 Jun 2024 17:20:59 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/mysql/20240602-xtrabackup/</guid>
      <description>MariaDB/MySQL备份和恢复(三)：xtrabackup用法和原理详述 Percona-xtrabackup是 Percona公司开发的</description>
    </item>
    
    <item>
      <title>MySQL 表分区和事件调度器</title>
      <link>https://piaohua.github.io/post/mysql/20240515-partition/</link>
      <pubDate>Wed, 15 May 2024 22:42:19 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/mysql/20240515-partition/</guid>
      <description>MySQL 表分区 MySQL表分区是将一个大表分割成若干个小表的技术。这样做可以提高查询和维护的效率，并且还可以改善数据的管理方式。 注意：如果分区字段</description>
    </item>
    
    <item>
      <title>在macOS上启动MySQL</title>
      <link>https://piaohua.github.io/post/mysql/20240427-start-mysql-on-mac/</link>
      <pubDate>Sat, 27 Apr 2024 23:06:02 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/mysql/20240427-start-mysql-on-mac/</guid>
      <description>在macOS上启动MySQL 在macOS上启动MySQL服务，可以使用内置的mysql.server脚本，该脚本通常位于 /usr/local/mysql/support-files 目录下。 如果是通过</description>
    </item>
    
    <item>
      <title>52条SQL语句性能优化策略</title>
      <link>https://piaohua.github.io/post/mysql/20240324-sql-optimize/</link>
      <pubDate>Sun, 24 Mar 2024 17:20:29 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/mysql/20240324-sql-optimize/</guid>
      <description>原文： 52条SQL语句性能优化策略 1、对查询进行优化，应尽量避免全表扫描，首先应考虑在 WHERE 及 ORDER BY 涉及的列上建立索引。 2、应尽量避免在 WHERE 子句中对</description>
    </item>
    
    <item>
      <title>MySQL优化步骤</title>
      <link>https://piaohua.github.io/post/mysql/20240324-optimize-steps/</link>
      <pubDate>Sun, 24 Mar 2024 16:31:07 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/mysql/20240324-optimize-steps/</guid>
      <description>数据库调优步骤详解 优化成本及效果如图： 当发现执行SQL时存在不规则延迟或卡顿的时候，就可以采用分析工具定位有问题的SQL，这三种分析工具可以</description>
    </item>
    
    <item>
      <title>MySQL锁机制</title>
      <link>https://piaohua.github.io/post/mysql/20240324-locking-strategy/</link>
      <pubDate>Sun, 24 Mar 2024 16:11:48 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/mysql/20240324-locking-strategy/</guid>
      <description>鹅厂T12详解MySQL加锁机制 锁机制 InnoDB使用不同的锁策略(Locking Strategy)以及MVCC机制来实现不同的隔离级别。 读</description>
    </item>
    
    <item>
      <title>MySQL高可用集群搭建 (主主&#43;keepalived)</title>
      <link>https://piaohua.github.io/post/mysql/20240323-master-master-keepalived/</link>
      <pubDate>Sat, 23 Mar 2024 20:32:46 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/mysql/20240323-master-master-keepalived/</guid>
      <description>MySQL高可用集群的搭建(主主+keepalived) 先做主从复制 修改主库和从库的参数文件(/etc/my.cnf) master1：192</description>
    </item>
    
    <item>
      <title>MySQL运维常备工具集、分库分表和高可用解决方案</title>
      <link>https://piaohua.github.io/post/mysql/20240323-tools/</link>
      <pubDate>Sat, 23 Mar 2024 18:18:45 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/mysql/20240323-tools/</guid>
      <description>MySQL 有很多周边工具，用这些工具提高日常维护管理 MySQL 的效率。 原文： https://mp.weixin.qq.com/s/6IvA-rKhFO4ikRg0Ks43LA Percona Toolkit 官方地址： https://docs.percona.com/percona-toolkit/ 常用的有这些： pt-query-digest，分析MySQL查</description>
    </item>
    
    <item>
      <title>HeidiSQL: 一个开源的数据库管理工具</title>
      <link>https://piaohua.github.io/post/mysql/20240323-heidisql/</link>
      <pubDate>Sat, 23 Mar 2024 17:37:26 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/mysql/20240323-heidisql/</guid>
      <description>HeidiSQL is free software, and has the aim to be easy to learn. &amp;ldquo;Heidi&amp;rdquo; lets you see and edit data and structures from computers running one of the database systems MariaDB, MySQL, Microsoft SQL, PostgreSQL and SQLite. Invented in 2002 by Ansgar, HeidiSQL belongs to the most popular tools for MariaDB and MySQL worldwide. Screenshot: Unicode1 International character support in editors, database tree, log panel &amp;hellip; Connecting to a server</description>
    </item>
    
    <item>
      <title>SQL中count(*)、count(字段)、count(distinct字段)的区别</title>
      <link>https://piaohua.github.io/post/mysql/20240317-diff-count/</link>
      <pubDate>Sun, 17 Mar 2024 18:36:03 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/mysql/20240317-diff-count/</guid>
      <description>SQL中count(*)、count(字段)、count(distinct字段)的区别 count() 是MySQL内置函数，用来统计字段中非NULL的数量</description>
    </item>
    
    <item>
      <title>SQL 语句中的执行顺序</title>
      <link>https://piaohua.github.io/post/mysql/20240317-sql-exec-order/</link>
      <pubDate>Sun, 17 Mar 2024 18:25:55 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/mysql/20240317-sql-exec-order/</guid>
      <description>原文 SQL 语句中的执行顺序是怎样的 SQL执行顺序： 先执行from,join来确定表之间的连接关系，得到初步的数据 where对数据进行普通的初步的</description>
    </item>
    
    <item>
      <title>SQL语句的执行流程</title>
      <link>https://piaohua.github.io/post/mysql/20240317-sql-exec/</link>
      <pubDate>Sun, 17 Mar 2024 15:52:56 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/mysql/20240317-sql-exec/</guid>
      <description>SQL语句的执行流程 一条查询SQL语句的执行流程： 客户端通过连接器连接MySQL服务。 连接成功后向SQL接口发送SQL语句请求。 SQL接口接</description>
    </item>
    
    <item>
      <title>MySQL慢查询分析工具pt-query-digest</title>
      <link>https://piaohua.github.io/post/mysql/20240316-pt-query-digest/</link>
      <pubDate>Sat, 16 Mar 2024 17:28:31 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/mysql/20240316-pt-query-digest/</guid>
      <description>MySQL慢查询分析工具pt-query-digest pt-query-digest是用于分析mysql慢日志的工具，它可以分析binlog</description>
    </item>
    
    <item>
      <title>performance_schema 和 information_schema 的区别</title>
      <link>https://piaohua.github.io/post/mysql/20240316-performance-information/</link>
      <pubDate>Sat, 16 Mar 2024 16:25:56 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/mysql/20240316-performance-information/</guid>
      <description>performance_schema 和 information_schema 的区别 performance_schema performance_schema这个库提供的是MySQL数据库性能的一些指标，主要保存 MySQL 服务器运行过程中的一些状态信息， 算</description>
    </item>
    
    <item>
      <title>怎么判断主从延迟？</title>
      <link>https://piaohua.github.io/post/mysql/20240316-seconds-behind-master/</link>
      <pubDate>Sat, 16 Mar 2024 16:25:07 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/mysql/20240316-seconds-behind-master/</guid>
      <description>怎么判断主从延迟？ 第一种：Seconds_Behind_Master 一种常规的方法就是 show slave status 查看 Seconds_Behind_Master，</description>
    </item>
    
    <item>
      <title>一条 update 会经历哪些过程</title>
      <link>https://piaohua.github.io/post/mysql/20240316-update/</link>
      <pubDate>Sat, 16 Mar 2024 16:24:14 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/mysql/20240316-update/</guid>
      <description>一条 update 会经历哪些过程 首先是连上连接器，负责跟客户端建立连接、获取权限、维持和管理连接。 分析器会先做词法分析。需要确定SQL语句中的字符串分表</description>
    </item>
    
    <item>
      <title>Prometheus监控MySQL</title>
      <link>https://piaohua.github.io/post/mysql/20240315-prometheus/</link>
      <pubDate>Fri, 15 Mar 2024 17:11:30 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/mysql/20240315-prometheus/</guid>
      <description>Prometheus监控MySQL docker-compose配置 通过docker-compose.yaml文件配置启动MySQL和mysq</description>
    </item>
    
    <item>
      <title>阿里巴巴 MySQL binlog 增量订阅&amp;消费组件Canal介绍和使用指南</title>
      <link>https://piaohua.github.io/post/mysql/20240314-canal/</link>
      <pubDate>Thu, 14 Mar 2024 13:14:39 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/mysql/20240314-canal/</guid>
      <description>来源 Canal介绍和使用指南 Canal 是阿里开源的一款 MySQL 数据库增量日志解析工具，提供增量数据订阅和消费。使用Canal能够实现异步更新数据，配合MQ</description>
    </item>
    
    <item>
      <title>mysql读取已提交(RC)和可重复读(RR)级别下的共享锁和排他锁有什么区别吗？</title>
      <link>https://piaohua.github.io/post/mysql/20240314-diff-s-x-locks/</link>
      <pubDate>Thu, 14 Mar 2024 12:55:43 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/mysql/20240314-diff-s-x-locks/</guid>
      <description>mysql读取已提交和可重复读级别下的共享锁和排他锁有什么区别吗？ MySQL 的事务隔离级别对锁的行为有重要影响。在 READ COMMITTED 和 REPEATABLE READ 这两个隔离级别下，共享锁</description>
    </item>
    
    <item>
      <title>varchar(50)和varchar(500)有什么区别？</title>
      <link>https://piaohua.github.io/post/mysql/20240314-diff-varchar-size/</link>
      <pubDate>Thu, 14 Mar 2024 12:50:30 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/mysql/20240314-diff-varchar-size/</guid>
      <description>varchar(50)和varchar(500)有什么区别？占用字节空间一样的话，为什么不直接用varchar(500)呢？ varchar(50) 和 varchar(500) 之间的主要</description>
    </item>
    
    <item>
      <title>如何找到慢 SQL？</title>
      <link>https://piaohua.github.io/post/mysql/20240312-slow-log/</link>
      <pubDate>Tue, 12 Mar 2024 23:23:07 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/mysql/20240312-slow-log/</guid>
      <description>如何找到慢 SQL？ MySQL 慢查询日志是用来记录 MySQL 在执行命令中，响应时间超过预设阈值的 SQL 语句。因此，通过分析慢查询日志我们就可以找出执行速度比较慢的</description>
    </item>
    
    <item>
      <title>MySQL 性能优化：碎片整理</title>
      <link>https://piaohua.github.io/post/mysql/20240302-data-free/</link>
      <pubDate>Sat, 02 Mar 2024 16:00:33 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/mysql/20240302-data-free/</guid>
      <description>MySQL 性能优化：碎片整理 MySQL 碎片是什么 MySQL 碎片就是 MySQL 数据文件中一些不连续的空白空间，这些空间无法再被全部利用，久而久之越来多，越来越零碎，从而造成物</description>
    </item>
    
    <item>
      <title>MySQL索引下推知识</title>
      <link>https://piaohua.github.io/post/mysql/20240302-index-condition-pushdown/</link>
      <pubDate>Sat, 02 Mar 2024 15:43:01 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/mysql/20240302-index-condition-pushdown/</guid>
      <description>MySQL索引下推知识分享 什么是索引下推 索引下推 (Index Condition Pushdown，索引条件下推，简称 ICP)，是 MySQL5.6 版本的新特性，它可以在对联合索引遍历过</description>
    </item>
    
    <item>
      <title>MySQL Explain分析SQL执行计划</title>
      <link>https://piaohua.github.io/post/mysql/20240301-explain/</link>
      <pubDate>Fri, 01 Mar 2024 16:27:33 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/mysql/20240301-explain/</guid>
      <description>EXPLAIN生成的查询计划中显示优化器计划如何执行查询 MySQL的EXPALIN是优化查询语句必不可少的工具，用户通过它可以获得查询计划的</description>
    </item>
    
    <item>
      <title>MySQL 8.0 中的隐藏特性</title>
      <link>https://piaohua.github.io/post/mysql/20240222-invisible/</link>
      <pubDate>Thu, 22 Feb 2024 17:30:54 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/mysql/20240222-invisible/</guid>
      <description>MySQL 8.0 中的隐藏特性 隐藏有关的特性 隐藏列 生成的隐藏主键 隐藏索引 隐藏列 8.0.23 新增隐藏列特性。什么是隐藏列？它基本上是一个表的常规列，具有自己的名称和数</description>
    </item>
    
    <item>
      <title>MySQL的索引失效场景</title>
      <link>https://piaohua.github.io/post/mysql/20240221-mysql-index-invalidation/</link>
      <pubDate>Wed, 21 Feb 2024 17:56:12 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/mysql/20240221-mysql-index-invalidation/</guid>
      <description>[一张图搞懂MySQL的索引失效]((https://segmentfault.com/a/1190000021464570) 全值匹配（索引</description>
    </item>
    
    <item>
      <title>MySQL-router MGR on Docker Compose</title>
      <link>https://piaohua.github.io/post/mysql/20240119-mysql-mgr-on-docker-compose/</link>
      <pubDate>Fri, 19 Jan 2024 16:44:48 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/mysql/20240119-mysql-mgr-on-docker-compose/</guid>
      <description>docker-compose之mysql-router(MGR单主模式) MGR介绍 MGR 即 MySQL Group Replication MGR 的特点 高一致性，基于原生复制及 paxos 协议的组复制技</description>
    </item>
    
    <item>
      <title>MySQL的容量统计和规划</title>
      <link>https://piaohua.github.io/post/mysql/20240118-mysql-size/</link>
      <pubDate>Thu, 18 Jan 2024 21:22:44 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/mysql/20240118-mysql-size/</guid>
      <description>MySQL的容量规划 MySQL容量规划 InnoDB的行和索引数据都保存在磁盘页中，页的默认大小为16KB。InnoDB表和索引由包含数据的叶</description>
    </item>
    
    <item>
      <title>MySQL 8.0 安装</title>
      <link>https://piaohua.github.io/post/mysql/20240118-mysql8-install/</link>
      <pubDate>Thu, 18 Jan 2024 21:02:24 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/mysql/20240118-mysql8-install/</guid>
      <description>MySQL 8.0 安装脚本 下载安装包 下载MySQL 8.0.25的安装包 1 wget https://downloads.mysql.com/archives/get/p/23/file/mysql-8.0.25-linux-glibc2.12-x86_64.tar.xz 解压这个xz文件 1 xz -d mysql-8.0.25-linux-glibc2.12-x86_64.tar.xz 配置文件 my.cnf 文件添加如下内容 1 2 3 4 5 6 7 8 9 10 11 12 13 14</description>
    </item>
    
    <item>
      <title>[MySQL] delete in select 语句不走索引问题分析</title>
      <link>https://piaohua.github.io/post/mysql/20240111-delete-in-select/</link>
      <pubDate>Thu, 11 Jan 2024 23:22:32 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/mysql/20240111-delete-in-select/</guid>
      <description>delete in (select &amp;hellip;) 语句执行慢，delete语句不走索引。 在清理MySQL中的一些过期数据时，发现delete操作执行非常慢。 问题场景 需要清理的数据查询</description>
    </item>
    
    <item>
      <title>DBeaver：一款免费开源的通用数据库工具</title>
      <link>https://piaohua.github.io/post/mysql/20231230-dbeaver/</link>
      <pubDate>Sat, 30 Dec 2023 16:11:48 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/mysql/20231230-dbeaver/</guid>
      <description>DBeaver：一款免费开源的通用数据库工具 DBeaver 是一个基于 Java 开发，免费开源的通用数据库管理和开发工具，使用非常友好的 ASL 协议。可以通过官方网站或</description>
    </item>
    
    <item>
      <title>更改 MySQL 用户密码的三种方法</title>
      <link>https://piaohua.github.io/post/mysql/20231026-change-password/</link>
      <pubDate>Thu, 26 Oct 2023 23:04:05 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/mysql/20231026-change-password/</guid>
      <description>在MySQL中，可以使用 UPDATE , SET PASSWORD 和 ALTER USER 语句更改 MySQL 用户密码。 UPDATE 使用 UPDATE 语句更新 mysql 数据库中的 user 表。 执行完 UPDATE 语句后，还需要执行 FLUSH PRIVILEGES 语句从 mysql 数据库中的</description>
    </item>
    
    <item>
      <title>[MySQL] where和order by使用索引不一致导致慢SQL问题</title>
      <link>https://piaohua.github.io/post/mysql/20230627-index/</link>
      <pubDate>Tue, 27 Jun 2023 10:17:34 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/mysql/20230627-index/</guid>
      <description>where和order by使用索引不一致导致慢SQL问题 慢SQL场景 数据库版本： 1 2 3 4 5 6 7 MySQL [test]&amp;gt; select version(); +------------+ | version() | +------------+ | 5.7.25-log | +------------+ 1 row in set (0.03 sec) 表结构语</description>
    </item>
    
    <item>
      <title>systemd授权mysql用户管理MySQL服务</title>
      <link>https://piaohua.github.io/post/mysql/20230624-systemd/</link>
      <pubDate>Sat, 24 Jun 2023 22:01:32 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/mysql/20230624-systemd/</guid>
      <description>Linux平台如何配置systemd授权mysql用户管理MySQL服务 在Linux系统中，默认情况下，mysql用户是没有权限启动MySQ</description>
    </item>
    
    <item>
      <title>[YCSB] 使用YCSB对数据库性能测试</title>
      <link>https://piaohua.github.io/post/mysql/20220723-ycsb/</link>
      <pubDate>Sat, 23 Jul 2022 11:21:06 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/mysql/20220723-ycsb/</guid>
      <description>Yahoo! Cloud Serving Benchmark (YCSB) 是一个Java语言实现的主要用于云端或者服务器端的数据库性能测试工具。 下载YCSB 下载最新版本的YCSB 1 2 3 curl -O --location https://github.com/brianfrankcooper/YCSB/releases/download/0.17.0/ycsb-0.17.0.tar.gz tar xfvz ycsb-0.17.0.tar.gz cd ycsb-0.17.0 查</description>
    </item>
    
    <item>
      <title>[MySQLSlap] mysqlslap 对 MySQL 进行压力测试</title>
      <link>https://piaohua.github.io/post/mysql/20220715-mysqlslap/</link>
      <pubDate>Fri, 15 Jul 2022 22:17:34 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/mysql/20220715-mysqlslap/</guid>
      <description>mysqlslap是mysql自带的基准测试工具，可以模拟多个客户端同时向服务器发起请求 mysqlslap 常用参数 1 2 3 4 5 6 7 8 9 10 11 12 --concurrency 并发数量,多个可</description>
    </item>
    
    <item>
      <title>[MySQL] mysql spider sandbox</title>
      <link>https://piaohua.github.io/post/mysql/20210925-mysql-spider-sandbox/</link>
      <pubDate>Sat, 25 Sep 2021 12:55:13 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/mysql/20210925-mysql-spider-sandbox/</guid>
      <description>This is a simple sandbox to play around with the MySQL spider engine. docker-compose.yaml Docker sandbox for experimenting with the Spider engine for MySQL Dockerfile resources https://github.com/mikesss/mysql-spider-sandbox.git 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 version:&amp;#39;3&amp;#39;services:mysql_spider:build:./dockerports:- &amp;#34;3307:3306&amp;#34;environment:MYSQL_DATABASE:spiderMYSQL_USER:spiderMYSQL_PASSWORD:spidervolumes:- ./scripts/spider:/docker-entrypoint-initdb.dmysql_backend1:image:mysql:5.5ports:- &amp;#34;3308:3306&amp;#34;environment:MYSQL_ALLOW_EMPTY_PASSWORD:&amp;#39;yes&amp;#39;MYSQL_DATABASE:spiderMYSQL_USER:spiderMYSQL_PASSWORD:spidervolumes:- ./scripts/mysql:/docker-entrypoint-initdb.dmysql_backend2:image:mysql:5.5ports:- &amp;#34;3309:3306&amp;#34;environment:MYSQL_ALLOW_EMPTY_PASSWORD:&amp;#39;yes&amp;#39;MYSQL_DATABASE:spiderMYSQL_USER:spiderMYSQL_PASSWORD:spidervolumes:-</description>
    </item>
    
    <item>
      <title>[MySQL] Mobike 高可用MySQL集群方案使用实践</title>
      <link>https://piaohua.github.io/post/mysql/20210919-mysql-moha/</link>
      <pubDate>Sun, 19 Sep 2021 10:38:47 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/mysql/20210919-mysql-moha/</guid>
      <description>MoHA 是 Mobike 开源的跨数据中心的 MySQL 集群的高可用（HA）解决方案 MoHA 提供了详细的设计和使用说明文档，点击查看 启动使用 下载项目 1 git clone https://gitee.com/piao/moha.git $GOPATH/src/github.com/moiot/moha 可选择修改配置中的</description>
    </item>
    
    <item>
      <title>[MySQL] Docker Official Image packaging for MySQL Community Server</title>
      <link>https://piaohua.github.io/post/mysql/20210830-mysql-dockerfile/</link>
      <pubDate>Mon, 30 Aug 2021 21:53:19 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/mysql/20210830-mysql-dockerfile/</guid>
      <description>Docker Official Image packaging for MySQL Community Server mysql5.7 Dockerfile.debian 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60</description>
    </item>
    
    <item>
      <title>[MySQL] show slave status 介绍</title>
      <link>https://piaohua.github.io/post/mysql/20210829-mysql-show-slave-status/</link>
      <pubDate>Sun, 29 Aug 2021 17:10:57 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/mysql/20210829-mysql-show-slave-status/</guid>
      <description>MySQL show slave status 介绍 执行show slave status返回结果 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47</description>
    </item>
    
    <item>
      <title>[MyRocks] Docker中使用MyRocks</title>
      <link>https://piaohua.github.io/post/mysql/20210726-mysql-myrocks/</link>
      <pubDate>Mon, 26 Jul 2021 00:17:24 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/mysql/20210726-mysql-myrocks/</guid>
      <description>RocksDB是FaceBook基于Google开源的LevelDB实现的，使用LSM(Log-Structure Merge）树来存储数据。</description>
    </item>
    
    <item>
      <title>[MySQL] 部署GreatSQL及MGR集群</title>
      <link>https://piaohua.github.io/post/mysql/20210725-mysql-greatsql/</link>
      <pubDate>Sun, 25 Jul 2021 10:46:24 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/mysql/20210725-mysql-greatsql/</guid>
      <description>转自 GreatSQL 社区 关于 GreatSQL GreatSQL是源于Percona Server的分支版本，除了Percona Server已有的稳定可靠、高效、管理更方便等</description>
    </item>
    
    <item>
      <title>[MySQL] MySQL Insert Id</title>
      <link>https://piaohua.github.io/post/mysql/20210612-mysql-insert-id/</link>
      <pubDate>Sat, 12 Jun 2021 16:17:49 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/mysql/20210612-mysql-insert-id/</guid>
      <description>The value to be used by the following INSERT or ALTER TABLE statement when inserting an AUTO_INCREMENT value. This is mainly used with the binary log. insert_id 是mysql session变量，设置该变量会影响下一条INSERT 或 ALTER TABLE 操作的 AUTO_INCREMENT 值。 比</description>
    </item>
    
    <item>
      <title>[MySQL] MySQL Binlog 初识</title>
      <link>https://piaohua.github.io/post/mysql/20210612-mysql-binlog/</link>
      <pubDate>Sat, 12 Jun 2021 15:39:42 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/mysql/20210612-mysql-binlog/</guid>
      <description>原文 Mysql日志 MySQL 的日志包括错误日志（ErrorLog），更新日志（Update Log），二进制日志（Binlog），查询日志（Query</description>
    </item>
    
    <item>
      <title>[MySQL] MySQL redolog undolog binlog</title>
      <link>https://piaohua.github.io/post/mysql/20210529-mysql-log/</link>
      <pubDate>Sat, 29 May 2021 10:04:33 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/mysql/20210529-mysql-log/</guid>
      <description>MySQL redolog undolog binlog ySQL中有六种日志文件，分别是： 重做日志（redo log）、回滚日志（undo log）、二进制日志（binlog）、错误日志（er</description>
    </item>
    
    <item>
      <title>[MySQL] 用Docker搭建MySQL主从多节点集群</title>
      <link>https://piaohua.github.io/post/mysql/20210523-mysql-master-slaves/</link>
      <pubDate>Sun, 23 May 2021 18:56:22 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/mysql/20210523-mysql-master-slaves/</guid>
      <description>用Docker搭建MySQL主从多节点集群 MySQL 主从同步分为 5 个步骤： master 节点将数据的更新记录写到 binary log 中。 slave 节点开启 IO 线程连接 master 节点，请求获取指定</description>
    </item>
    
    <item>
      <title>[MySQL] MySQL 存储引擎的比较</title>
      <link>https://piaohua.github.io/post/mysql/20210523-mysql-engines-compare/</link>
      <pubDate>Sun, 23 May 2021 12:33:14 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/mysql/20210523-mysql-engines-compare/</guid>
      <description>转载自 MySql 存储引擎的比较 InnoDB 存储引擎 InnoDB 是事务性数据库的首选引擎，支持事务安全表（ACID），支持行锁定和外键。MySQL5.5.5 之后，Inno</description>
    </item>
    
    <item>
      <title>[MySQL] MySQL Cluster on docker-compose</title>
      <link>https://piaohua.github.io/post/mysql/20210523-mysql-cluster/</link>
      <pubDate>Sun, 23 May 2021 12:07:32 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/mysql/20210523-mysql-cluster/</guid>
      <description>MySQL Cluster on docker-compose MySQL Cluster是一个高性能、可扩展、集群化数据库产品。MySQL Cluster是一个基于NDB Cluster存储引擎的完整分布式数</description>
    </item>
    
    <item>
      <title>[MySQL] Percona XtraDB Cluster on docker-compose</title>
      <link>https://piaohua.github.io/post/mysql/20210523-mysql-pxc/</link>
      <pubDate>Sun, 23 May 2021 11:40:17 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/mysql/20210523-mysql-pxc/</guid>
      <description>Percona XtraDB Cluster on docker-compose 选择percona/percona-xtradb-cluster:5.7版本，搭建一个3节点的集群; 使用haproxy做反向代理负</description>
    </item>
    
    <item>
      <title>[MySQL] MySQL身份验证插件</title>
      <link>https://piaohua.github.io/post/mysql/20210404-mysql-pluggable-authentication/</link>
      <pubDate>Sun, 04 Apr 2021 21:38:33 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/mysql/20210404-mysql-pluggable-authentication/</guid>
      <description>MySQL身份验证插件(mysql_old_password、mysql_native_password、sha256_password、c</description>
    </item>
    
    <item>
      <title>[MySQL] MySQL 8.0 身份验证插件(caching_sha2_password)</title>
      <link>https://piaohua.github.io/post/mysql/20210305-mysql-connecton/</link>
      <pubDate>Fri, 05 Mar 2021 23:16:17 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/mysql/20210305-mysql-connecton/</guid>
      <description>MySQL 8.0 身份验证插件(caching_sha2_password) MySQL 5.6/5.7 默认身份验证插件是 mysql_native_password, 依赖于 SHA1 算法 MySQL 5.6 开始支持 sha256_password 身份验证插件。它使用加盐密码</description>
    </item>
    
    <item>
      <title>[MySQL] MySQL 半同步复制(semi_sync_replication)</title>
      <link>https://piaohua.github.io/post/mysql/20201226-mysql-semi-sync-replication/</link>
      <pubDate>Sat, 26 Dec 2020 16:32:38 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/mysql/20201226-mysql-semi-sync-replication/</guid>
      <description>MySQL 半同步复制(semi-sync-replication) semi-sync-replication介绍 MySQL 5.5 开始引入半同步复制支持，5.5之</description>
    </item>
    
    <item>
      <title>[MySQL] MySQL Character</title>
      <link>https://piaohua.github.io/post/mysql/20201226-mysql-character/</link>
      <pubDate>Sat, 26 Dec 2020 10:18:24 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/mysql/20201226-mysql-character/</guid>
      <description>Mysql 字符集(Character) 介绍 字符集介绍 MySQL支持多种字符集，不同字符集有区别；广泛使用是utf8和utf8mb4。 utf8是utf</description>
    </item>
    
    <item>
      <title>[MySQL] Mysql Binlog 操作命令</title>
      <link>https://piaohua.github.io/post/mysql/20201122-mysql-binlog/</link>
      <pubDate>Sun, 22 Nov 2020 23:17:08 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/mysql/20201122-mysql-binlog/</guid>
      <description>Mysql Binlog 日志 使用场景 MySQL主从复制，Master节点开启binlog日志记录，然后同步到slave节点 MySQL数据恢复，使用mysqlbi</description>
    </item>
    
    <item>
      <title>[MySQL] MySQL索引优化总结</title>
      <link>https://piaohua.github.io/post/mysql/20200913-mysql-index-optimize/</link>
      <pubDate>Sun, 13 Sep 2020 17:54:26 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/mysql/20200913-mysql-index-optimize/</guid>
      <description>MySQL索引优化总结 什么是索引 索引（在MySQL中也叫“键key”）是存储引擎快速找到记录的一种数据结构。 - 《高性能MySQL》 索引类型 可</description>
    </item>
    
    <item>
      <title>[MySQL] MySQL大表优化方案</title>
      <link>https://piaohua.github.io/post/mysql/20200913-mysql-large-table-scheme/</link>
      <pubDate>Sun, 13 Sep 2020 17:40:30 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/mysql/20200913-mysql-large-table-scheme/</guid>
      <description>MySQL大表优化方案 单表优化 字段 尽量使用TINYINT、SMALLINT、MEDIUM_INT作为整数类型而非INT，如果非负则加上UNS</description>
    </item>
    
    <item>
      <title>[MySQL] MySQL Connection Phase Packets</title>
      <link>https://piaohua.github.io/post/mysql/20200821-mysql-connection-phase-packets/</link>
      <pubDate>Fri, 21 Aug 2020 23:40:54 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/mysql/20200821-mysql-connection-phase-packets/</guid>
      <description>MySQL Connection Phase Packets Initial Handshake Packet 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 1 [0a] protocol version string[NUL] server version 4 connection id string[8] auth-plugin-data-part-1 1 [00] filler 2 capability flags (lower 2 bytes) if more data in the packet: 1 character set 2 status flags 2 capability flags (upper 2 bytes) if capabilities &amp;amp;</description>
    </item>
    
    <item>
      <title>[MySQL] MySQL Capability Flags</title>
      <link>https://piaohua.github.io/post/mysql/20200821-mysql-capability-flags/</link>
      <pubDate>Fri, 21 Aug 2020 00:07:17 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/mysql/20200821-mysql-capability-flags/</guid>
      <description>MySQL Capability Flags 简介 客户端和服务器使用权能标志来指示它们支持和想要使用的功能。 标志位名称 标志位 说明 CLIENT_LONG_PASSWORD 0x0001 new more secure passwords CLIENT_FOUND_ROWS 0x0002 Found instead of affected rows CLIENT_LONG_FLAG 0x0004 Get all column flags CLIENT_CONNECT_WITH_DB 0x0008 One can specify db on</description>
    </item>
    
    <item>
      <title>[MySQL] MySQL身份验证插件</title>
      <link>https://piaohua.github.io/post/mysql/20200818-mysql-plugin/</link>
      <pubDate>Tue, 18 Aug 2020 00:42:48 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/mysql/20200818-mysql-plugin/</guid>
      <description>MySQL身份验证插件(mysql_native_password、sha256_password、caching_sha2_passwor</description>
    </item>
    
    <item>
      <title>[MySQL] MySQL配置文件my.cnf参数解释说明</title>
      <link>https://piaohua.github.io/post/mysql/20200817-mysql-my-cnf/</link>
      <pubDate>Mon, 17 Aug 2020 23:32:11 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/mysql/20200817-mysql-my-cnf/</guid>
      <description>MySQL配置文件my.cnf参数解释说明 参数说明 #BEGIN CONFIG INFO #DESCR: 4GB RAM, 只使用InnoDB, ACID, 少量的连接, 队列负载大 #TYPE: SYSTEM #END CONFIG INFO # # 此mysql配置文件</description>
    </item>
    
    <item>
      <title>[MySQL] MySQL 内连接、外连接、左连接、右连接示例介绍</title>
      <link>https://piaohua.github.io/post/mysql/20200816-mysql-join/</link>
      <pubDate>Sun, 16 Aug 2020 12:57:55 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/mysql/20200816-mysql-join/</guid>
      <description>MySQL 内连接、左连接（左外连接）、右连接（右外连接） 创建示例表 1 2 3 4 5 6 7 8 9 10 11 CREATE TABLE `a_table` ( `a_id` int(11) DEFAULT NULL, `a_name` varchar(10) DEFAULT NULL, `a_part` varchar(10) DEFAULT NULL ) ENGINE=InnoDB DEFAULT CHARSET=utf8 CREATE TABLE `b_table` ( `b_id` int(11) DEFAULT NULL, `b_name` varchar(10)</description>
    </item>
    
    <item>
      <title>[MySQL] MySQL事务详情</title>
      <link>https://piaohua.github.io/post/mysql/20200816-mysql-transaction/</link>
      <pubDate>Sun, 16 Aug 2020 00:09:58 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/mysql/20200816-mysql-transaction/</guid>
      <description>数据库中的事务是指对数据库执行一批操作，这些操作最终要么全部执行成功，要么全部失败，不会存在部分成功的情况。 事务的特性(ACID) 原子性（A</description>
    </item>
    
    <item>
      <title>[MySQL] MySQL通过Sys库查看数据库运行情况</title>
      <link>https://piaohua.github.io/post/mysql/20200812-mysql-sys/</link>
      <pubDate>Wed, 12 Aug 2020 22:52:40 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/mysql/20200812-mysql-sys/</guid>
      <description>快捷的了解到MySQL的一些信息 sys库里面的表、视图、函数、存储过程可以使我们更方便、快捷的了解到MySQL的一些信息，比如哪些语句使用了</description>
    </item>
    
    <item>
      <title>[MySQL] MySQL autocommit</title>
      <link>https://piaohua.github.io/post/mysql/20200812-mysql-autocommit/</link>
      <pubDate>Wed, 12 Aug 2020 22:24:38 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/mysql/20200812-mysql-autocommit/</guid>
      <description>MySQL autocommit 控制是否开启隐式事务 查看状态 mysql&amp;gt; show variables like &#39;%autocommit%&#39;; 开启自动提交 mysql&amp;gt; set autocommit=1; 关闭自动提交 使用commit提交事务操作，或者使用rollback回滚操作 配置文</description>
    </item>
    
    <item>
      <title>[MySQL] MySQL 连接数和状态查看</title>
      <link>https://piaohua.github.io/post/mysql/20200809-mysql-show-connections/</link>
      <pubDate>Sun, 09 Aug 2020 00:09:40 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/mysql/20200809-mysql-show-connections/</guid>
      <description>MySQL 连接数和状态查看 mysql的最大连接数默认是100, 最大可以达到16384 查看mysql服务器最大连接数 1 2 mysql&amp;gt; show variables like &amp;#39;%max_connections%&amp;#39;; mysql&amp;gt; select @@max_connections; 设置mysql</description>
    </item>
    
    <item>
      <title>[MySQL] 使用Sysbench对MySQL数据库性能压测</title>
      <link>https://piaohua.github.io/post/mysql/20200808-mysql-sysbench/</link>
      <pubDate>Sat, 08 Aug 2020 11:53:39 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/mysql/20200808-mysql-sysbench/</guid>
      <description>MySQL 基准测试 sysbench介绍 sysbench 是一个模块化的、跨平台、多线程基准测试工具，主要用于评估测试各种不同系统参数下的数据库负载情况。 它主要包括以</description>
    </item>
    
    <item>
      <title>[MySQL] MySQL Affected Rows</title>
      <link>https://piaohua.github.io/post/mysql/20200805-mysql-affected-rows/</link>
      <pubDate>Wed, 05 Aug 2020 21:27:39 +0800</pubDate>
      
      <guid>https://piaohua.github.io/post/mysql/20200805-mysql-affected-rows/</guid>
      <description>MySQL INSERT/INSERT &amp;hellip; ON DUPLICATE KEY UPDATE Affected Rows 问题 问题描述 在INSERT/INSERT ... ON DUPLICATE KEY UPDATE操作时, 会存在MySQL连接client_flag是否设置CL</description>
    </item>
    
  </channel>
</rss>